<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pboxLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>